/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 12 03:26:45 GMT 2021
 */

package com.group9.bankofaz.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.group9.bankofaz.exception.IllegalTransactionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IllegalTransactionException_ESTest extends IllegalTransactionException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IllegalTransactionException illegalTransactionException0 = new IllegalTransactionException("");
      IllegalTransactionException illegalTransactionException1 = null;
      try {
        illegalTransactionException1 = new IllegalTransactionException("", illegalTransactionException0, true, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable((String) null);
      IllegalTransactionException illegalTransactionException0 = new IllegalTransactionException("V}|H`y_@sAOs", mockThrowable0, true, true);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable((String) null);
      IllegalTransactionException illegalTransactionException0 = new IllegalTransactionException("", mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IllegalTransactionException illegalTransactionException0 = new IllegalTransactionException();
      IllegalTransactionException illegalTransactionException1 = new IllegalTransactionException(illegalTransactionException0);
      assertFalse(illegalTransactionException1.equals((Object)illegalTransactionException0));
  }
}
